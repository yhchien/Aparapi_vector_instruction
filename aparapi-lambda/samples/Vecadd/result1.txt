 Datasize is1000
version 0:95: $full : $large;
kernel &run(
    align 8  kernarg_u64 %_arg0, 
    align 8  kernarg_u64 %_arg1, 
    align 8  kernarg_u64 %_arg2, 
    align 8  kernarg_s32 %_arg3
   ){
         ld_kernarg_u64 $d0, [%_arg0];
         ld_kernarg_u64 $d1, [%_arg1];
         ld_kernarg_u64 $d2, [%_arg2];
         ld_kernarg_s32 $s3, [%_arg3];
         workitemabsid_s32 $s4, 0;

 // 0000_0000 aload_0  var#0(oref_0 [Lcom/amd/aparapi/sample/add/Float4;)
         add_s32 $s3, $s3, $s4;
         mov_b64 $d4, $d0;

 // 0000_0001 iload_3  var#3(i_3 I)
         mov_b32 $s5, $s3;

 // 0000_0002 aaload  
         cvt_u64_s32 $d5, $s5;
         mad_u64 $d5, $d5, 8, $d4;
         ld_global_u64 $d4, [$d5+24];

 // 0000_0003 pop     
         

 // 0000_0004 aload_1  var#1(oref_1 [Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d4, $d1;

 // 0000_0005 iload_3  var#3(i_3 I)
         mov_b32 $s5, $s3;

 // 0000_0006 aaload  
         cvt_u64_s32 $d5, $s5;
         mad_u64 $d5, $d5, 8, $d4;
         ld_global_u64 $d4, [$d5+24];

 // 0000_0007 aload_2  var#2(oref_2 [Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d5, $d2;

 // 0000_0008 iload_3  var#3(i_3 I)
         mov_b32 $s6, $s3;

 // 0000_0009 aaload  
         cvt_u64_s32 $d6, $s6;
         mad_u64 $d6, $d6, 8, $d5;
         ld_global_u64 $d5, [$d6+24];

 // 0000_0010 aload_0  var#0(oref_0 [Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d6, $d0;

 // 0000_0011 iload_3  var#3(i_3 I)
         mov_b32 $s7, $s3;

 // 0000_0012 aaload  
         cvt_u64_s32 $d7, $s7;
         mad_u64 $d7, $d7, 8, $d6;
         ld_global_u64 $d6, [$d7+24];

 // 0001_0000 aload_2  var#2(oref_2 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d7, $d6;

 // 0001_0001 aload_0  var#0(oref_0 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d8, $d4;

 // 0001_0002 getfield F com.amd.aparapi.sample.add.Float4 x
         ld_global_f32 $s8, [$d8+16];

 // 0001_0005 aload_1  var#1(oref_1 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d9, $d5;

 // 0001_0006 getfield F com.amd.aparapi.sample.add.Float4 x
         ld_global_f32 $s9, [$d9+16];

 // 0001_0009 fadd    
         add_f32 $s8, $s8, $s9;

 // 0001_0010 putfield F com.amd.aparapi.sample.add.Float4 x
         st_global_f32 $s8, [$d7+16];

 // 0001_0013 aload_2  var#2(oref_2 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d7, $d6;

 // 0001_0014 aload_0  var#0(oref_0 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d8, $d4;

 // 0001_0015 getfield F com.amd.aparapi.sample.add.Float4 y
         ld_global_f32 $s8, [$d8+20];

 // 0001_0018 aload_1  var#1(oref_1 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d9, $d5;

 // 0001_0019 getfield F com.amd.aparapi.sample.add.Float4 y
         ld_global_f32 $s9, [$d9+20];

 // 0001_0022 fadd    
         add_f32 $s8, $s8, $s9;

 // 0001_0023 putfield F com.amd.aparapi.sample.add.Float4 y
         st_global_f32 $s8, [$d7+20];

 // 0001_0026 aload_2  var#2(oref_2 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d7, $d6;

 // 0001_0027 aload_0  var#0(oref_0 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d8, $d4;

 // 0001_0028 getfield F com.amd.aparapi.sample.add.Float4 z
         ld_global_f32 $s8, [$d8+24];

 // 0001_0031 aload_1  var#1(oref_1 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d9, $d5;

 // 0001_0032 getfield F com.amd.aparapi.sample.add.Float4 z
         ld_global_f32 $s9, [$d9+24];

 // 0001_0035 fadd    
         add_f32 $s8, $s8, $s9;

 // 0001_0036 putfield F com.amd.aparapi.sample.add.Float4 z
         st_global_f32 $s8, [$d7+24];

 // 0001_0039 aload_2  var#2(oref_2 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d7, $d6;

 // 0001_0040 aload_0  var#0(oref_0 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d8, $d4;

 // 0001_0041 getfield F com.amd.aparapi.sample.add.Float4 w
         ld_global_f32 $s8, [$d8+28];

 // 0001_0044 aload_1  var#1(oref_1 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d9, $d5;

 // 0001_0045 getfield F com.amd.aparapi.sample.add.Float4 w
         ld_global_f32 $s9, [$d9+28];

 // 0001_0048 fadd    
         add_f32 $s8, $s8, $s9;

 // 0001_0049 putfield F com.amd.aparapi.sample.add.Float4 w
         st_global_f32 $s8, [$d7+28];

 // 0001_0052 aload_2  var#2(oref_2 Lcom/amd/aparapi/sample/add/Float4;)
         mov_b64 $d7, $d6;

 // 0001_0053 areturn 
         mov_b64 $d4, $d7;

 // 0000_0016 pop     
         

 // 0000_0017 return  
         ret;
};
/*
0000={
     0000 -> com.amd.aparapi.sample.add.HSAAdd.lambda$main$0([Lcom/amd/aparapi/sample/add/Float4;[Lcom/amd/aparapi/sample/add/Float4;[Lcom/amd/aparapi/sample/add/Float4;I)V
}

0001={
     0000 -> com.amd.aparapi.sample.add.HSAAdd.lambda$main$0([Lcom/amd/aparapi/sample/add/Float4;[Lcom/amd/aparapi/sample/add/Float4;[Lcom/amd/aparapi/sample/add/Float4;I)V
     0013 -> com.amd.aparapi.sample.add.Float4.Vecadd(Lcom/amd/aparapi/sample/add/Float4;Lcom/amd/aparapi/sample/add/Float4;Lcom/amd/aparapi/sample/add/Float4;)Lcom/amd/aparapi/sample/add/Float4;
}

*/
 HSA Using Time:0.263sec
It took 348590584 nanoseconds
